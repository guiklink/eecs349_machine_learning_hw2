# This file outputs the rules generated by the decision tree in Disjunctive Normal Form. 
from tree_util import *
from data_util import *


def getRules(tree):
	Rules = []
	#for all of the nodes in tree model
	for i in tree.fields[tree.nType].keys():
			# find a leaf
			if NodeType.LEAF == tree.getNodeType(i):
				node = i #node=leaf.node
				Rule= "IF " 
				leafClass = tree.getLeafClassification(node)
				Rules.append(Rule)
				while tree.getParent(node):
					splitVal = tree.getSplitValue(tree.getParent(node))
					splitAttribute = tree.getSplitAtribute(tree.getParent(node))
					if FeatureType.CONTINUOUS == tree.getSplitType(tree.getParent(node)):
						if node == tree.getChild0(tree.getParent(node)): 
							Rule = Rule + splitAttribute + " >= " + str(splitVal)
							node = tree.getParent(node)
							if tree.getParent(node):
								Rule = Rule + " AND "
									
														
						else:
							Rule = Rule +splitAttribute + " < " + str(splitVal)
							node = tree.getParent(node)
							if tree.getParent(node):
								Rule = Rule + " AND "
							
					elif FeatureType.DISCRETE == tree.getSplitType(tree.getParent(node)):
						if node == tree.getChild0(tree.getParent(node)): 
							Rule = Rule +splitAttribute + " != " + str(splitVal)
							node = tree.getParent(node)
							if tree.getParent(node):
								Rule = Rule + " AND "
							
						else:
							Rule = Rule +splitAttribute + " = " + str(splitVal)
							node = tree.getParent(node)
							if tree.getParent(node):
								Rule = Rule + " AND "
						
				if leafClass: 
					print Rule
					print "OR"
	print "THEN TRUE."
